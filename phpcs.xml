<?xml version="1.0"?>
<ruleset  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="WordPress Theme Coding Standards" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">
	<description>A custom set of code standard rules to check for WordPress themes.</description>

	<!-- What to scan: include any root-level PHP files, and the /src folder -->
	<file>.</file>
	<!-- Third-party or auto-generated code -->
	<exclude-pattern>*/build/*</exclude-pattern>
	<exclude-pattern>*/data/*</exclude-pattern>
	<exclude-pattern>packages/e2e-tests/src/plugins/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/third-party/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>assets/js/*.asset.php</exclude-pattern>
	<exclude-pattern>assets/js/*.chunks.php</exclude-pattern>
	<exclude-pattern>includes/polyfills/mbstring.php</exclude-pattern>
	<exclude-pattern>tests/phpstan/*</exclude-pattern>
	<exclude-pattern>tests/phpunit/includes/MarkupComparison.php</exclude-pattern>

	<!--
		COMMAND LINE ARGUMENTS
		https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml
	-->

	<!-- Only check the PHP, CSS and SCSS files. JS files are checked separately with JSCS and JSHint. -->
	<arg value="s"/>
	<!-- Only lint php files by default -->
	<arg name="extensions" value="php"/>
	<!-- Strip the filepaths down to the relevant bit. -->
	<arg name="basepath" value="./"/>
	<!-- Check up to 20 files simultaneously. -->
	<arg name="parallel" value="20"/>

	<!--
		Tests for PHP version compatibility.
		https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards#Recomended-additional-rulesets
	-->
	<config name="testVersion" value="8.0-"/>

	<!--
		Tests for WordPress version compatibility.
		https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties
	-->
	<config name="minimum_wp_version" value="6.3"/>

	<!-- SNIFF SPECIFIC CONFIGURATION -->

	<!-- Verify that the text_domain is set to the desired text-domain.
		Multiple valid text domains can be provided as a comma-delimited list. -->
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array" value="blank-theme"/>
		</properties>
	</rule>

	<!-- Allow for theme specific exceptions to the file name rules based
		on the theme hierarchy. -->
	<rule ref="WordPress.Files.FileName">
		<properties>
			<property name="is_theme" value="true"/>
		</properties>
	</rule>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment">
		<properties>
			<property name="skipIfInheritdoc" value="true" />
		</properties>
	</rule>
	<!-- Verify that everything in the global namespace is prefixed with a theme specific prefix.
		 Multiple valid prefixes can be provided as a comma-delimited list. -->
	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<property name="prefixes" type="array" value="blank_theme, Blank_Theme" />
		</properties>
	</rule>


	<!--
	#############################################################################
	Rulesets
	#############################################################################
	-->

	<!-- Load PHPCompatibilityWP standards -->
	<rule ref="PHPCompatibilityWP" />

	<!-- Load WordPress VIP Go standards - for use with projects on the (newer) VIP Go platform. -->
	<rule ref="WordPress-VIP-Go" />

	<!-- Load WordPress Coding standards -->
	<rule ref="WordPress">
		<exclude name="Generic.Commenting.DocComment.MissingShort" />
		<exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
		<exclude name="Universal.Operators.DisallowShortTernary.Found"/>
		<exclude name="WordPress.Files.FileName"/>
		<exclude name="WordPress.NamingConventions.ValidVariableName"/>
		<exclude name="WordPress.WP.Capabilities.Undetermined" />
	</rule>

</ruleset>
